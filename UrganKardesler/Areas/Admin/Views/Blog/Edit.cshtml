@model BlogDTO

@{
    ViewBag.Title = "Edit - "+Model.Title;
}

@section _pageStyles{
    <link rel="stylesheet" href="~/AdminAssets/vendors/select2/select2.min.css">
    <link rel="stylesheet" href="~/AdminAssets/vendors/select2-bootstrap-theme/select2-bootstrap.min.css">
}

<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Edit - @Model.Title</h4>
            <form class="forms-sample" method="post" asp-action="Edit">
                <div class="form-group">
                    <div class="col-12 border-1x w-100 h-100 ">
                        <image src="/images/blog/@Model.ThumbnailName" id="preview" style="width : inherit; height : inherit;"></image>
                    </div>
                </div>
                <div class="form-group">
                    <label>Thumbnail Yükle</label>
                    <input type="file" name="img[]" id="thumbnailInput" class="file-upload-default">
                    <div class="input-group col-xs-12">
                        <input value="@Model.ThumbnailName" type="text" class="form-control file-upload-info" disabled="" placeholder="Thumbnail Yükle">
                        <span class="input-group-append">
                            <button class="file-upload-browse btn btn-primary" type="button">Yükle</button>
                        </span>
                    </div>

                    <input type="hidden" asp-for="ThumbnailBase64Code" id="base64" />
                    <input type="hidden" asp-for="AuthorName" value="@Model.ThumbnailName"/>
                </div>
                <div class="form-group">
                    <label for="title">Başlık</label>
                    <input asp-for="Title" type="text" value="@Model.Title" required minlength="3" maxlength="60" class="form-control" id="title" placeholder="Başlık">
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="category">Kategori</label>
                    <input asp-for="Category" minlength="3" maxlength="25" required value="@Model.Category" type="text" class="form-control" id="category" placeholder="Kategori">
                    <span asp-validation-for="Category" class="text-danger"></span>

                </div>
                <div class="form-group">
                    <label for="shortDesc">Kısa Açıklama</label>
                    <textarea asp-for="ShortDescription" minlength="30" required maxlength="250" class="form-control" id="shortDesc" placeholder="Kısa Açıklama">@Model.ShortDescription</textarea>
                    <span asp-validation-for="ShortDescription" class="text-danger"></span>

                </div>
                *<div class="form-group">
                    <label for="article">Makale</label>
                    <textarea asp-for="Article" inputmode="latin" required minlength="50" class="form-control" id="article" rows="4">@Model.Article</textarea>
                    <span asp-validation-for="Article" class="text-danger"></span>
                </div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <button type="submit" class="btn btn-primary mr-2">Onayla</button>
            </form>
        </div>
    </div>
</div>

@section _pageScripts{
    <script src="~/AdminAssets/js/file-upload.js"></script>
    <script src="~/AdminAssets/js/typeahead.js"></script>
    <script src="~/AdminAssets/js/select2.js"></script>

    <script>
        $(document).ready(function () {

            const avatar = $("#preview");
            const base64input = $("#base64");
            const convertBase64 = (file) => {
                return new Promise((resolve, reject) => {
                    const fileReader = new FileReader();
                    fileReader.readAsDataURL(file);

                    fileReader.onload = () => {
                        resolve(fileReader.result);
                    };

                    fileReader.onerror = (error) => {
                        reject(error);
                    };
                });
            };

            $("#thumbnailInput").on("change", async function (event) {

                const file = event.target.files[0];
                const base64 = await convertBase64(file);
                avatar.attr("src", base64);
                base64input.val(base64);

                console.warn(base64);
            });

        });
    </script>
}